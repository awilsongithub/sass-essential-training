// @include calling mixin passes parameters
// after the : in params is default value. vh is viewport height
// gradient is (top) to bottom with start and end values
// params: image, height, background-position
@mixin backImage(
  $image,
  $height: 100vh,
  $bgPos: center center
  ){
  background: linear-gradient(
    to bottom,
    rgba(0,0,0,0),
    rgba(0,0,0,0.6)),
    url($image);
  background-repeat: no-repeat;
  background-position: $bgPos;
  background-size: cover;
  height: $height;
}
// whatever element you put me in
// before and :after are pseudo-elements
// they insert before/after the content of the selected element
// ie just before the content of each .item li
@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table; // behave like a table element
  }
  &:after {
    clear: both; // clear any above contents (serves as a wall pushing end of element past any elements out of flow ie floated elements )
  }
}

// mixin for each item in a grid
// qty is qty per row.
// calculates width of item based on #/row and margins
@mixin imagegrid($qty, $margin){
  // width of each item calculation 
  width: ((100% - (($qty - 1) *  $margin))/$qty);
  // give margin to every element b, right for spacers between them
  &:nth-child(n){
    margin-bottom: $margin;
    margin-right: $margin;
  }
  // but last element don't give margin spacer
  &:nth-child(#{$qty}n){
    margin-right: 0;
    margin-bottom: 0;
  }
}

// without SASS
// .griditem {
//   width: 50%;
//   margin-bottom: 1px;
//   margin-right: 1px;
//
// }
// .griditem:last-of-type {
//   margin-bottom: 0;
//   margin-right: 0;
// }
